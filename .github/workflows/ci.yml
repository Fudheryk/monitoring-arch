name: CI

on:
  push:
    branches: [ main ]
  pull_request:

# Évite les exécutions parallèles sur la même branche
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Docker versions
        run: |
          docker --version
          docker compose version || true

      # (Optionnel mais sûr) jq est utilisé par le script de smoke
      - name: Ensure curl + jq are present
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl jq

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pytest + requests
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests

      # IMPORTANT : Compose (dans docker/) référence ../.env  -> on crée .env à la racine
      - name: Prepare root .env from example
        run: |
          if [ -f .env.example ]; then
            cp .env.example .env
          else
            echo "ERROR: .env.example is missing at repo root" >&2
            exit 1
          fi

      - name: Start stack (docker compose)
        working-directory: docker
        run: |
          docker compose up -d --build
          docker compose ps

      - name: Run Alembic migrations (in container)
        working-directory: docker
        run: docker compose exec -T api alembic upgrade head

      - name: Wait for API to be healthy
        run: |
          for i in {1..60}; do
            curl -fsS http://localhost:8000/api/v1/health && exit 0
            sleep 2
          done
          echo "API not healthy" >&2
          exit 1

      - name: Run integration tests (pytest)
        env:
          API: http://localhost:8000
          KEY: dev-apikey-123
        run: |
          pytest -q server/tests/test_http_targets_integration.py

      - name: Run smoke tests (bash)
        env:
          API: http://localhost:8000
          KEY: dev-apikey-123
        run: |
          chmod +x scripts/smoke_http_targets.sh
          ./scripts/smoke_http_targets.sh

      - name: Dump docker logs on failure
        if: failure()
        working-directory: docker
        run: |
          docker compose ps || true
          echo "----- api logs -----"
          docker compose logs api | tail -n 400 || true
          echo "----- worker logs -----"
          docker compose logs worker | tail -n 200 || true
          echo "----- db logs -----"
          docker compose logs db | tail -n 200 || true

      - name: Stop stack
        if: always()
        working-directory: docker
        run: docker compose down -v
