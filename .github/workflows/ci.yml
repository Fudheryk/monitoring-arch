name: CI

on:
  push:
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show Docker versions
        run: |
          docker --version
          docker compose version

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Copy env and start stack
        run: |
          cp .env.example .env
          cd docker
          docker compose up --build -d

      - name: Run Alembic migrations
        run: |
          cd docker
          docker compose exec -T api alembic upgrade head

      - name: Wait for API to be healthy
        run: |
          set -e
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/api/v1/health || true)
            if [ "$code" = "200" ]; then
              echo "API is up."
              exit 0
            fi
            sleep 2
          done
          echo "API never became healthy"; exit 1

      - name: Run smoke tests (bash)
        env:
          API: http://localhost:8000
          KEY: dev-apikey-123
        run: |
          bash scripts/smoke_http_targets.sh

      - name: Run integration tests (pytest)
        env:
          API: http://localhost:8000
          KEY: dev-apikey-123
        run: |
          python -m pip install -U pip
          pip install pytest requests
          pytest -q server/tests/test_http_targets_integration.py

      - name: Dump docker logs on failure
        if: failure()
        run: |
          cd docker
          docker compose ps
          docker compose logs --no-color api worker beat db | tail -n 5000

      - name: Teardown
        if: always()
        run: |
          cd docker
          docker compose down -v

